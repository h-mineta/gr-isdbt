id: isdbt_hierarchical_combinator
label: Hierarchical Combinator
category: '[isdbt]'

templates:
  imports: import gnuradio.isdbt as isdbt
  make: isdbt.hierarchical_combinator(${mode}, ${segments_A}, ${segments_B}, ${segments_C})

parameters:
- id: mode  
  label: Transmission Mode
  dtype: int
  options: ['1','2','3']
  option_labels: [MODE1 (2K), MODE2 (4K), MODE3 (8K)]
  default: 3
- id: segments_A
  label: Layer A Segments
  dtype: int
- id: segments_B
  label: Layer B Segments
  dtype: int
- id: segments_C
  label: Layer C Segments
  dtype: int


inputs:
- label: in A
  domain: stream 
  dtype: complex
  vlen: ${ (segments_A)*96*(2**(mode-1))} 
  optional: 0
- label: in B
  domain: stream 
  dtype: complex
  vlen: ${ (segments_B)*96*(2**(mode-1))} 
  optional: 1
- label: in C
  domain: stream 
  dtype: complex
  vlen: ${ (segments_C)*96*(2**(mode-1)) }
  optional: 1

outputs:
- label: out
  domain: stream
  dtype: complex
  vlen: ${13*96*(2**(mode-1))} 
  optional: 0

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
