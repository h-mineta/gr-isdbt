/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tmcc_encoder.h)                                            */
/* BINDTOOL_HEADER_FILE_HASH(9e68da5d11858e0c90d41e26c3607fc0)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/isdbt/tmcc_encoder.h>
// pydoc.h is automatically generated in the build directory
#include <tmcc_encoder_pydoc.h>

void bind_tmcc_encoder(py::module& m)
{

    using tmcc_encoder    = ::gr::isdbt::tmcc_encoder;


    py::class_<tmcc_encoder, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<tmcc_encoder>>(m, "tmcc_encoder", D(tmcc_encoder))

        .def(py::init(&tmcc_encoder::make),
           py::arg("mode"),
           py::arg("one_seg_present"),
           py::arg("mod_scheme_A"),
           py::arg("mod_scheme_B"),
           py::arg("mod_scheme_C"),
           py::arg("conv_code_A"),
           py::arg("conv_code_B"),
           py::arg("conv_code_C"),
           py::arg("int_length_A"),
           py::arg("int_length_B"),
           py::arg("int_length_C"),
           py::arg("nsegs_A"),
           py::arg("nsegs_B"),
           py::arg("nsegs_C"),
           D(tmcc_encoder,make)
        )
        



        ;




}








