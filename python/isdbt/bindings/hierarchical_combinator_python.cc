/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(hierarchical_combinator.h)                                 */
/* BINDTOOL_HEADER_FILE_HASH(9967d9c95bccd500aba7fb8a01769b01)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/isdbt/hierarchical_combinator.h>
// pydoc.h is automatically generated in the build directory
#include <hierarchical_combinator_pydoc.h>

void bind_hierarchical_combinator(py::module& m)
{

    using hierarchical_combinator    = ::gr::isdbt::hierarchical_combinator;


    py::class_<hierarchical_combinator, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<hierarchical_combinator>>(m, "hierarchical_combinator", D(hierarchical_combinator))

        .def(py::init(&hierarchical_combinator::make),
           py::arg("mode"),
           py::arg("segments_A"),
           py::arg("segments_B"),
           py::arg("segments_C"),
           D(hierarchical_combinator,make)
        )
        



        ;




}








